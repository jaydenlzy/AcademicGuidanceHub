/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package academicguidancehubgui;

import academicguidancehub.FileLocationInterface;
import academicguidancehub.FileReaderUtils;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author New HP
 */
public class AdminEditRemoveProjectManager extends javax.swing.JFrame {

    /**
     * Creates new form EditRemoveProjectManager
     */
    public AdminEditRemoveProjectManager() {
        initComponents();
        setSize(900,640);
        setResizable(false);
        
        projectManagerTableContent();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        pmTable = new javax.swing.JTable();
        removeBt = new javax.swing.JButton();
        editBt = new javax.swing.JButton();
        cancelBt = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        jLabel1.setBackground(new java.awt.Color(204, 204, 204));
        jLabel1.setFont(new java.awt.Font("Times New Roman", 3, 26)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Edit/Remove Project Manager Role to Lecturer Page");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(158, 158, 158)
                .addComponent(jLabel1)
                .addContainerGap(162, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(47, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(26, 26, 26))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/EditRemovePM.png"))); // NOI18N
        jLabel2.setText("EditRemovePM.png");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 578, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 220, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 104, 170, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("Project Manager Table:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 140, -1, -1));

        pmTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(pmTable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 180, 670, 280));

        removeBt.setBackground(new java.awt.Color(255, 51, 51));
        removeBt.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        removeBt.setForeground(new java.awt.Color(255, 255, 255));
        removeBt.setText("Remove");
        removeBt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                removeBtMouseClicked(evt);
            }
        });
        getContentPane().add(removeBt, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 530, 110, 40));

        editBt.setBackground(new java.awt.Color(0, 0, 255));
        editBt.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        editBt.setForeground(new java.awt.Color(255, 255, 255));
        editBt.setText("Edit");
        editBt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editBtMouseClicked(evt);
            }
        });
        getContentPane().add(editBt, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 530, 110, 40));

        cancelBt.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        cancelBt.setText("Cancel");
        cancelBt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelBtMouseClicked(evt);
            }
        });
        getContentPane().add(cancelBt, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 530, 100, 40));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelBtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelBtMouseClicked
        this.dispose();
        AdminDashboard obj = new AdminDashboard();
        obj.setVisible(true);
    }//GEN-LAST:event_cancelBtMouseClicked

    private void removeBtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeBtMouseClicked
        DefaultTableModel lecturerList = (DefaultTableModel)pmTable.getModel();
        int selectedRow = pmTable.getSelectedRow();
        
        if (selectedRow != -1) {
            String id = lecturerList.getValueAt(selectedRow,0).toString();
            String name = lecturerList.getValueAt(selectedRow, 1).toString();
            String password = lecturerList.getValueAt(selectedRow, 2).toString();
            String email = lecturerList.getValueAt(selectedRow, 3).toString();
            String contact = lecturerList.getValueAt(selectedRow, 4).toString();
            String field = lecturerList.getValueAt(selectedRow, 6).toString();
            
            String delimiter = ";";
            
            UpdateLecturerFile(FileLocationInterface.lecturerFilePath,delimiter,id,name,password,email,contact,field);
            UpdatePMFile(FileLocationInterface.projectManagerPath,id,delimiter);
            JOptionPane.showMessageDialog(null, "Remove successfully!", "REMOVE PROJECT MANAGER ROLE SUCCESS", JOptionPane.INFORMATION_MESSAGE);
            
            projectManagerTableContent();
        }
    }//GEN-LAST:event_removeBtMouseClicked

    private void editBtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editBtMouseClicked
        DefaultTableModel stList = (DefaultTableModel)pmTable.getModel();
        int selectedRow = pmTable.getSelectedRow();
        
        if (selectedRow != -1 && selectedRow < stList.getRowCount()) {
            int columnCount = stList.getColumnCount();
            if (columnCount >= 5) { // Check if there are at least 7 columns
                String id = stList.getValueAt(selectedRow, 0).toString();
                String name = stList.getValueAt(selectedRow, 1).toString();
                String password = stList.getValueAt(selectedRow, 2).toString();
                String email = stList.getValueAt(selectedRow, 3).toString();
                String contact = stList.getValueAt(selectedRow, 4).toString();
                String role = stList.getValueAt(selectedRow, 5).toString();
                String functionalField = stList.getValueAt(selectedRow, 6).toString();
        
                AdminEditProjectManager obj = new AdminEditProjectManager(id, name, password, email, contact, role, functionalField);
                obj.setVisible(true);
                
                this.dispose();
            } else {
                System.err.println("Not enough columns in the table to retrieve intake data.");
            }
        }else {
            System.err.println("No row selected or invalid selected row index.");
        }
    }//GEN-LAST:event_editBtMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminEditRemoveProjectManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminEditRemoveProjectManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminEditRemoveProjectManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminEditRemoveProjectManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminEditRemoveProjectManager().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelBt;
    private javax.swing.JButton editBt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable pmTable;
    private javax.swing.JButton removeBt;
    // End of variables declaration//GEN-END:variables

    private void projectManagerTableContent() {
        String delimiter = ";";
        int[] classTypeColumnIndices = {0, 1, 2, 3, 4, 5, 6};
        String[][] classTypeData = FileReaderUtils.readData(FileLocationInterface.projectManagerPath, delimiter, classTypeColumnIndices);

        if (classTypeData != null) {
            DefaultTableModel classTypeTableModel = new DefaultTableModel();
            classTypeTableModel.addColumn("PM ID");
            classTypeTableModel.addColumn("PM Name");
            classTypeTableModel.addColumn("PM Password");
            classTypeTableModel.addColumn("PM Email");
            classTypeTableModel.addColumn("PM Contact");
            classTypeTableModel.addColumn("Role");
            classTypeTableModel.addColumn("PM Functional Area(s)");

            for (String[] row : classTypeData) {
                classTypeTableModel.addRow(row);
            }

            pmTable.setModel(classTypeTableModel);
        }
    }

    private void UpdateLecturerFile(String lecturerfilePath, String delimiter, String id, String name, String password, String email, String contact, String field) {
        String role = "Lecturer";
        
        String pmRecord = id + ";" + name + ";" + password + ";" + email + ";" + contact + ";" + role + ";" + field;
        
        try (BufferedWriter writer = new BufferedWriter(new FileWriter(lecturerfilePath, true))) {
            writer.write(pmRecord);
            writer.newLine();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private void UpdatePMFile(String pmfilePath, String id, String delimiter) {
        try {
            // Read the content of the file and store it in a list
            File file = new File(pmfilePath);
            BufferedReader reader = new BufferedReader(new FileReader(file));
            String line;
            StringBuilder content = new StringBuilder();
            while ((line = reader.readLine()) != null) {
                // Split the line by the delimiter to check if it contains the specified 'tp'
                String[] parts = line.split(delimiter);
                if (!parts[0].equals(id)) { // If the 'tp' doesn't match, keep the line
                    content.append(line).append(System.lineSeparator());
                }
            }
            reader.close();

            // Write the updated content back to the file
            BufferedWriter writer = new BufferedWriter(new FileWriter(file));
            writer.write(content.toString());
            writer.close();

            System.out.println("Entry with tp '" + id + "' removed from the file.");
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
